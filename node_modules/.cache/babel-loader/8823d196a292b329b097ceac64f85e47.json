{"ast":null,"code":"import _slicedToArray from \"/Users/quinndarling/Desktop/beartracks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMemo, useLayoutEffect } from 'react';\nimport { registerTarget } from '../../common/registration';\nimport { useDragDropManager } from './useDragDropManager';\nimport { TargetConnector } from '../../common/TargetConnector';\nimport { DropTargetMonitorImpl } from '../../common/DropTargetMonitorImpl';\nexport function useDropTargetMonitor() {\n  const manager = useDragDropManager();\n  const monitor = useMemo(() => new DropTargetMonitorImpl(manager), [manager]);\n  const connector = useMemo(() => new TargetConnector(manager.getBackend()), [manager]);\n  return [monitor, connector];\n}\nexport function useDropHandler(spec, monitor, connector) {\n  const manager = useDragDropManager();\n  const handler = useMemo(() => {\n    return {\n      canDrop() {\n        const canDrop = spec.current.canDrop;\n        return canDrop ? canDrop(monitor.getItem(), monitor) : true;\n      },\n\n      hover() {\n        const hover = spec.current.hover;\n\n        if (hover) {\n          hover(monitor.getItem(), monitor);\n        }\n      },\n\n      drop() {\n        const drop = spec.current.drop;\n\n        if (drop) {\n          return drop(monitor.getItem(), monitor);\n        }\n      }\n\n    };\n  }, [monitor]);\n  useLayoutEffect(function registerHandler() {\n    const _registerTarget = registerTarget(spec.current.accept, handler, manager),\n          _registerTarget2 = _slicedToArray(_registerTarget, 2),\n          handlerId = _registerTarget2[0],\n          unregister = _registerTarget2[1];\n\n    monitor.receiveHandlerId(handlerId);\n    connector.receiveHandlerId(handlerId);\n    return unregister;\n  }, [monitor, connector]);\n}","map":null,"metadata":{},"sourceType":"module"}