{"ast":null,"code":"import { BEGIN_DRAG, PUBLISH_DRAG_SOURCE, HOVER, END_DRAG, DROP } from '../actions/dragDrop';\nimport { REMOVE_TARGET } from '../actions/registry';\nimport { without } from '../utils/js_utils';\nconst initialState = {\n  itemType: null,\n  item: null,\n  sourceId: null,\n  targetIds: [],\n  dropResult: null,\n  didDrop: false,\n  isSourcePublic: null\n};\nexport default function dragOperation(state = initialState, action) {\n  const payload = action.payload;\n\n  switch (action.type) {\n    case BEGIN_DRAG:\n      return { ...state,\n        itemType: payload.itemType,\n        item: payload.item,\n        sourceId: payload.sourceId,\n        isSourcePublic: payload.isSourcePublic,\n        dropResult: null,\n        didDrop: false\n      };\n\n    case PUBLISH_DRAG_SOURCE:\n      return { ...state,\n        isSourcePublic: true\n      };\n\n    case HOVER:\n      return { ...state,\n        targetIds: payload.targetIds\n      };\n\n    case REMOVE_TARGET:\n      if (state.targetIds.indexOf(payload.targetId) === -1) {\n        return state;\n      }\n\n      return { ...state,\n        targetIds: without(state.targetIds, payload.targetId)\n      };\n\n    case DROP:\n      return { ...state,\n        dropResult: payload.dropResult,\n        didDrop: true,\n        targetIds: []\n      };\n\n    case END_DRAG:\n      return { ...state,\n        itemType: null,\n        item: null,\n        sourceId: null,\n        dropResult: null,\n        didDrop: false,\n        isSourcePublic: null,\n        targetIds: []\n      };\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}