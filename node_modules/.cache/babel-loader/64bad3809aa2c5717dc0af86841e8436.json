{"ast":null,"code":"var _jsxFileName = \"/Users/quinndarling/Desktop/beartracks/src/Components/CourseSearchTableComponent/CourseSearchTable.js\";\nimport React, { Component } from 'react';\nimport Division from '../DivisionComponent/Division';\nimport Requirement from '../RequirementComponent/Requirement';\nimport { Accordion, Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport courses from '../../courses.json';\nimport CourseButton from '../CourseButtonComponent/CourseButton';\nconst allCourses = Object.keys(courses);\n\nclass CourseSearchTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCourse: \"\",\n      filtered: [],\n      value: \"\"\n    };\n    this.setSelectedCourse = this.setSelectedCourse.bind(this);\n  }\n\n  setSelectedCourse(course) {\n    if (this.state.selectedCourse === course) {\n      this.setState({\n        selectedCourse: \"\"\n      });\n    } else {\n      this.setState({\n        selectedCourse: course\n      });\n    }\n  }\n\n  handleChange(event) {\n    var searchTerm = event.target.value;\n    filteredList = courses.filter(course => {\n      const lc = course.toLowerCase();\n      const filter = e.target.value.toLowerCase();\n      return lc.includes(filter);\n    });\n    this.setState({\n      value: searchTerm,\n      filtered: filteredList\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  handleDrop(droppedCourse) {\n    return;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      className: \"SearchCourses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"backToDivisions\",\n      onClick: () => this.props.showDivisions(),\n      src: require(\"../../Images/rightarrow.png\"),\n      height: \"30\",\n      width: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Form, {\n      inline: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      placeholder: \"search for a course...\",\n      className: \"SearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"RequirementTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      className: \"CourseSearchList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.filtered.map((course, index) => {\n      return React.createElement(CourseButton, {\n        Course: {\n          'Course': courses[course]\n        },\n        courseNumber: courses[course]['Course'],\n        courseTitle: courses[course]['Title'],\n        courseUnits: courses[course]['Units'],\n        key: courses[course]['Title'],\n        courseDescription: courses[course]['Desc'],\n        handleClick: () => this.setSelectedCourse(course),\n        handleDrop: () => this.handleDrop(courses[course]),\n        isSelected: this.state.selectedCourse === course,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default CourseSearchTable;","map":{"version":3,"sources":["/Users/quinndarling/Desktop/beartracks/src/Components/CourseSearchTableComponent/CourseSearchTable.js"],"names":["React","Component","Division","Requirement","Accordion","Navbar","Nav","Form","FormControl","Button","Icon","courses","CourseButton","allCourses","Object","keys","CourseSearchTable","constructor","props","state","selectedCourse","filtered","value","setSelectedCourse","bind","course","setState","handleChange","event","searchTerm","target","filteredList","filter","lc","toLowerCase","e","includes","handleSubmit","preventDefault","handleDrop","droppedCourse","render","showDivisions","require","map","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Division from '../DivisionComponent/Division'; \nimport Requirement from '../RequirementComponent/Requirement';\nimport {Accordion, Navbar, Nav, Form, FormControl, Button} from 'react-bootstrap';\nimport {Icon} from 'semantic-ui-react'\nimport courses from '../../courses.json'\nimport CourseButton from '../CourseButtonComponent/CourseButton';\n\nconst allCourses = Object.keys(courses);\n\nclass CourseSearchTable extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedCourse: \"\",\n            filtered:[],\n            value: \"\"\n        }\n\n        this.setSelectedCourse = this.setSelectedCourse.bind(this);\n    }\n\n    setSelectedCourse(course) {\n        if (this.state.selectedCourse === course) {\n        this.setState({\n            selectedCourse: \"\"\n        })}\n        else {\n            this.setState({\n                selectedCourse: course\n            })}\n    }\n\n    handleChange(event) {\n        var searchTerm = event.target.value;\n        filteredList = courses.filter(course => {\n            const lc = course.toLowerCase();\n            const filter = e.target.value.toLowerCase();\n            return lc.includes(filter);\n        })\n        this.setState({\n            value: searchTerm,\n            filtered: filteredList});\n      }\n    \n      handleSubmit(event) {\n        event.preventDefault();\n      }\n\n    handleDrop(droppedCourse) {return}\n\n    render() {\n        return (\n            <div>\n                <Navbar bg = \"primary\" variant = 'dark' className=\"SearchCourses\">\n                <img className = 'backToDivisions' onClick = {()=>this.props.showDivisions()} src={require(\"../../Images/rightarrow.png\")} height=\"30\" width=\"30\"/>\n                    <Form inline onSubmit={this.handleSubmit}>\n                        <FormControl type='text' value = {this.state.value} onChange= {this.handleChange}placeholder = \"search for a course...\" className = 'SearchBar'/>\n                    </Form>\n                </Navbar>\n                <div className=\"RequirementTable\">\n                    <Accordion className = 'CourseSearchList'>\n                        {this.state.filtered.map((course, index) => {\n                        return (\n                                <CourseButton\n                                Course={{'Course': courses[course]}}\n                                courseNumber={courses[course]['Course']}\n                                courseTitle={courses[course]['Title']}\n                                courseUnits={courses[course]['Units']} \n                                key = {courses[course]['Title']}\n                                courseDescription = {courses[course]['Desc']}\n                                handleClick = {()=>this.setSelectedCourse(course)}\n                                handleDrop = {()=>this.handleDrop(courses[course])}\n                                isSelected = {this.state.selectedCourse === course}/>\n                        )})}\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CourseSearchTable;"]},"metadata":{},"sourceType":"module"}