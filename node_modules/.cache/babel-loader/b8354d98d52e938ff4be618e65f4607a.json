{"ast":null,"code":"import catalog from '../CATALOG';\nconst user2 = new Object();\nuser2.startSem = 'Fall 2017';\nuser2.endSem = 'Spring 2021'; //this dictionary gets filled out by the user2 during the sign up flow\n\nuser2.enrollments = {\n  'Colleges': {\n    'College of Letters and Sciences': {\n      'Majors': ['Data Science'],\n      'Minors': ['Mathematics']\n      /*'College of Engineering':\n          {\n          'Majors': ['Energy Engineering'],\n          'Minors': ['Energy Engineering']\n          }\n      }*/\n\n    }\n  }\n};\nuser2.collegeNames = Object.keys(user2.enrollments['Colleges']);\nuser2.majorNames = findMajorNames();\nuser2.minorNames = findMinorNames();\nuser2.universityData = [];\nuser2.majorData = findMajorData();\nuser2.minorData = findMinorData();\nuser2.collegeData = findCollegeData();\nuser2.semesters = Array(generateLength(user2.startSem, user2.endSem)).fill([]);\n\nuser2.totalProgress = function () {\n  var categories = user2.collegeData.concat(user2.majorData, user2.minorData);\n  var catNames = user2.collegeNames.concat(user2.majorNames, user2.minorNames);\n  var numUnits = 0;\n  var numCompletedUnits = 0;\n\n  for (var i = 0; i < catNames.length; i++) {\n    var currReq = categories[i][catNames[i]]['Requirements'];\n\n    for (var j = 0; j < currReq.length; j++) {\n      var numCompletedUnits = numCompletedUnits + findUnitsTakeninRequirement(currReq[j], categories[i][catNames[i]]['Courses']);\n      numUnits += currReq[j]['Minimum Units'];\n    }\n  }\n\n  return Math.floor(numCompletedUnits / numUnits * 100);\n};\n\nexport default user2;\n\nfunction findMajorData() {\n  /* Goes through every college, finds the js/json files that contain information about every major in each college*/\n\n  /* return data in the form [{'Data Science': {\n                                  'Courses': [{'Division: ...,\n                                               'Requirement': ...,\n                                               'Course': {'Course': COMPSCI C100,\n                                                          'Units': ...,\n                                                           'Title: ...,\n                                                           'Desc': ... }}],\n                                  'Requirements': json'}}]*/\n  var userMajors = [];\n  var collegeNames = Object.keys(user2.enrollments['Colleges']);\n\n  for (let i = 0; i < collegeNames.length; i++) {\n    for (let j = 0; j < user2.enrollments['Colleges'][collegeNames[i]]['Majors'].length; j++) {\n      let currMajor = user2.enrollments['Colleges'][collegeNames[i]]['Majors'][j];\n      let catalogDict = catalog['Colleges'][collegeNames[i]]['Majors'][currMajor];\n      let dict = {\n        [currMajor]: catalogDict\n      };\n      userMajors.push(dict);\n    }\n  }\n\n  return userMajors;\n}\n\nfunction findMajorNames() {\n  var userMajors = [];\n  var collegeNames = Object.keys(user2.enrollments['Colleges']);\n\n  for (let i = 0; i < collegeNames.length; i++) {\n    for (let j = 0; j < user2.enrollments['Colleges'][collegeNames[i]]['Majors'].length; j++) {\n      let currMajor = user2.enrollments['Colleges'][collegeNames[i]]['Majors'][j];\n      userMajors.push(currMajor);\n    }\n  }\n\n  return userMajors;\n}\n\nfunction findCollegeData() {\n  var userColleges = [];\n  var collegeNames = Object.keys(user2.enrollments['Colleges']);\n\n  for (let i = 0; i < collegeNames.length; i++) {\n    let currCollege = collegeNames[i];\n    let catalogDict = catalog['Colleges'][currCollege]['College Requirements'];\n    let dict = {\n      [currCollege]: catalogDict\n    };\n    userColleges.push(dict);\n  }\n\n  return userColleges;\n}\n\nfunction findMinorData() {\n  var userMinors = [];\n  var collegeNames = Object.keys(user2.enrollments['Colleges']);\n\n  for (let i = 0; i < collegeNames.length; i++) {\n    for (let j = 0; j < user2.enrollments['Colleges'][collegeNames[i]]['Minors'].length; j++) {\n      let currMinor = user2.enrollments['Colleges'][collegeNames[i]]['Minors'][j];\n      let catalogDict = catalog['Colleges'][collegeNames[i]]['Minors'][currMinor];\n      let dict = {\n        [currMinor]: catalogDict\n      };\n      userMinors.push(dict);\n    }\n  }\n\n  return userMinors;\n}\n\nfunction findMinorNames() {\n  var userMinors = [];\n  var collegeNames = Object.keys(user2.enrollments['Colleges']);\n\n  for (let i = 0; i < collegeNames.length; i++) {\n    for (let j = 0; j < user2.enrollments['Colleges'][collegeNames[i]]['Minors'].length; j++) {\n      let currMinor = user2.enrollments['Colleges'][collegeNames[i]]['Minors'][j];\n      userMinors.push(currMinor);\n    }\n  }\n\n  return userMinors;\n}\n\nfunction findUnitsTakeninRequirement(requirement, courses) {\n  let userSemCopy = user2.semesters.slice();\n  let userCourses = [].concat.apply([], userSemCopy);\n  let filteredCourses = courses.filter(a => a.Requirement === requirement['Requirement']);\n  let unitsTaken = 0;\n\n  for (let i = 0; i < filteredCourses.length; i++) {\n    for (let j = 0; j < userCourses.length; j++) {\n      if (filteredCourses[i]['Course']['Course'] === userCourses[j]['Course']['Course']) {\n        unitsTaken += filteredCourses[i]['Course']['Units'];\n      }\n    }\n  }\n\n  if (unitsTaken > requirement['Minimum Units']) {\n    return requirement['Minimum Units'];\n  } else {\n    return unitsTaken;\n  }\n}\n\nfunction generateLength(start, end) {\n  let listDates = [start];\n  const splitStart = start.split(\" \");\n  let currSeason = splitStart[0];\n  let currYear = parseInt(splitStart[1], 10);\n  const splitEnd = end.split(\" \");\n  const endSeason = splitEnd[0];\n  const endYear = parseInt(splitEnd[1], 10);\n  var i = 0;\n\n  while (i < 20) {\n    if (currSeason === endSeason && currYear === endYear) {\n      break;\n    }\n\n    if (currSeason === 'Spring') {\n      currSeason = 'Fall';\n    } else {\n      currSeason = 'Spring';\n      currYear++;\n    }\n\n    listDates.push(currSeason + ' ' + currYear.toString());\n    i++;\n  }\n\n  return listDates.length;\n}","map":{"version":3,"sources":["/Users/quinndarling/Desktop/beartracks/src/UserPlans/User2.js"],"names":["catalog","user2","Object","startSem","endSem","enrollments","collegeNames","keys","majorNames","findMajorNames","minorNames","findMinorNames","universityData","majorData","findMajorData","minorData","findMinorData","collegeData","findCollegeData","semesters","Array","generateLength","fill","totalProgress","categories","concat","catNames","numUnits","numCompletedUnits","i","length","currReq","j","findUnitsTakeninRequirement","Math","floor","userMajors","currMajor","catalogDict","dict","push","userColleges","currCollege","userMinors","currMinor","requirement","courses","userSemCopy","slice","userCourses","apply","filteredCourses","filter","a","Requirement","unitsTaken","start","end","listDates","splitStart","split","currSeason","currYear","parseInt","splitEnd","endSeason","endYear","toString"],"mappings":"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","sourcesContent":["import catalog from '../CATALOG'; \n\n\nconst user2 = new Object();\nuser2.startSem = 'Fall 2017';\nuser2.endSem = 'Spring 2021';\n//this dictionary gets filled out by the user2 during the sign up flow\nuser2.enrollments = {'Colleges':\n                        {\n                        'College of Letters and Sciences': \n                            {\n                            'Majors': ['Data Science'],\n                            'Minors': ['Mathematics']\n                            }\n                        /*'College of Engineering':\n                            {\n                            'Majors': ['Energy Engineering'],\n                            'Minors': ['Energy Engineering']\n                            }\n                        }*/\n                    }};\n\nuser2.collegeNames = Object.keys(user2.enrollments['Colleges']);\nuser2.majorNames = findMajorNames();\nuser2.minorNames = findMinorNames();\n\nuser2.universityData = [];\nuser2.majorData = findMajorData();\nuser2.minorData = findMinorData();\nuser2.collegeData = findCollegeData();\n\nuser2.semesters = Array(generateLength(user2.startSem, user2.endSem)).fill([]);\n\nuser2.totalProgress = function() {\n    var categories = user2.collegeData.concat(user2.majorData, user2.minorData);\n    var catNames = user2.collegeNames.concat(user2.majorNames, user2.minorNames);\n    var numUnits = 0;\n    var numCompletedUnits = 0;\n    for (var i = 0; i < catNames.length; i++) {\n        var currReq = categories[i][catNames[i]]['Requirements']\n        for (var j = 0; j < currReq.length; j++) {\n            var numCompletedUnits = numCompletedUnits + findUnitsTakeninRequirement(currReq[j], categories[i][catNames[i]]['Courses']);\n            numUnits += currReq[j]['Minimum Units'];\n        }\n    }\n    return Math.floor((numCompletedUnits / numUnits) * 100);\n};\nexport default user2;\n\n\nfunction findMajorData() {\n    /* Goes through every college, finds the js/json files that contain information about every major in each college*/\n    /* return data in the form [{'Data Science': {\n                                    'Courses': [{'Division: ...,\n                                                 'Requirement': ...,\n                                                 'Course': {'Course': COMPSCI C100,\n                                                            'Units': ...,\n                                                             'Title: ...,\n                                                             'Desc': ... }}],\n                                    'Requirements': json'}}]*/\n    var userMajors = [];\n    var collegeNames = Object.keys(user2.enrollments['Colleges']);\n    for (let i = 0; i < collegeNames.length; i++) {\n        for (let j = 0; j < user2.enrollments['Colleges'][collegeNames[i]]['Majors'].length; j++) {\n            let currMajor = user2.enrollments['Colleges'][collegeNames[i]]['Majors'][j];\n            let catalogDict = catalog['Colleges'][collegeNames[i]]['Majors'][currMajor];\n            let dict = {[currMajor]: catalogDict}\n            userMajors.push(dict);\n        }\n    }\n    return userMajors;\n}\n\nfunction findMajorNames() {\n    var userMajors = [];\n    var collegeNames = Object.keys(user2.enrollments['Colleges']);\n    for (let i = 0; i < collegeNames.length; i++) {\n        for (let j = 0; j < user2.enrollments['Colleges'][collegeNames[i]]['Majors'].length; j++) {\n            let currMajor = user2.enrollments['Colleges'][collegeNames[i]]['Majors'][j];\n            userMajors.push(currMajor);\n        }\n    }\n    return userMajors;\n}\n\nfunction findCollegeData() {\n    var userColleges = [];\n    var collegeNames = Object.keys(user2.enrollments['Colleges']);\n    for (let i = 0; i < collegeNames.length; i++) {\n        let currCollege = collegeNames[i];\n        let catalogDict = catalog['Colleges'][currCollege]['College Requirements'];\n        let dict = {[currCollege]: catalogDict}\n        userColleges.push(dict);\n    }\n    return userColleges;\n}\n\nfunction findMinorData() {\n    var userMinors = [];\n    var collegeNames = Object.keys(user2.enrollments['Colleges']);\n    for (let i = 0; i < collegeNames.length; i++) {\n        for (let j = 0; j < user2.enrollments['Colleges'][collegeNames[i]]['Minors'].length; j++) {\n            let currMinor = user2.enrollments['Colleges'][collegeNames[i]]['Minors'][j];\n            let catalogDict = catalog['Colleges'][collegeNames[i]]['Minors'][currMinor];\n            let dict = {[currMinor]: catalogDict}\n            userMinors.push(dict);\n        }\n    }\n    return userMinors;\n}\n\nfunction findMinorNames() {\n    var userMinors = [];\n    var collegeNames = Object.keys(user2.enrollments['Colleges']);\n    for (let i = 0; i < collegeNames.length; i++) {\n        for (let j = 0; j < user2.enrollments['Colleges'][collegeNames[i]]['Minors'].length; j++) {\n            let currMinor = user2.enrollments['Colleges'][collegeNames[i]]['Minors'][j];\n            userMinors.push(currMinor);\n        }\n    }\n    return userMinors;\n}\n\nfunction findUnitsTakeninRequirement(requirement, courses) {\n    let userSemCopy = user2.semesters.slice();\n    let userCourses = [].concat.apply([], userSemCopy);\n    let filteredCourses = courses.filter(a => a.Requirement === requirement['Requirement']);\n    let unitsTaken = 0;\n    for (let i = 0; i < filteredCourses.length; i++) {\n        for (let j = 0; j < userCourses.length; j++) {\n            if (filteredCourses[i]['Course']['Course'] === userCourses[j]['Course']['Course']) {\n                unitsTaken += filteredCourses[i]['Course']['Units'];\n            }\n        }\n    }\n    if (unitsTaken > requirement['Minimum Units']) {\n        return requirement['Minimum Units']\n    } else {\n        return unitsTaken;\n    }\n}\n\nfunction generateLength(start, end) {\n    let listDates = [start];\n    const splitStart = start.split(\" \");\n    let currSeason =  splitStart[0];\n    let currYear = parseInt(splitStart[1], 10);\n    const splitEnd = end.split(\" \");\n    const endSeason = splitEnd[0];\n    const endYear = parseInt(splitEnd[1], 10);\n    var i = 0;\n    while (i < 20) {\n        if (currSeason === (endSeason) && currYear === endYear) {\n            break;\n        }\n        if (currSeason === 'Spring') {\n            currSeason = 'Fall';\n        } else {\n            currSeason = 'Spring';\n            currYear++;\n        }\n        listDates.push(currSeason + ' ' + currYear.toString());\n        i++;\n    }\n    return listDates.length\n}\n\n                                 "]},"metadata":{},"sourceType":"module"}