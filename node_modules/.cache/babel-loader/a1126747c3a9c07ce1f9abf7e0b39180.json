{"ast":null,"code":"var _jsxFileName = \"/Users/quinndarling/Desktop/beartracks/src/Components/DivisionListComponent/DivisionList.js\";\nimport React, { Component } from 'react';\nimport Division from '../DivisionComponent/Division';\nimport Requirement from '../RequirementComponent/Requirement';\nimport { Accordion, Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport courses from '../../courses.json';\nimport CourseButton from '../CourseButtonComponent/CourseButton';\nconst allCourses = [courses];\n\nclass DivisionList extends Component {\n  //props are data (either user.majorData, user.collegeData etc.), clicked (boolean), onClick\n  //renders a button. If there are multiple majors/minors/colleges, renders a button to click to next, renders list of divisions if clicked\n  constructor(props) {\n    super(props);\n    const requirements = this.props.data[this.props.parent]['Requirements'];\n    const divisions = [];\n\n    for (let i = 0; i < requirements.length; i++) {\n      divisions.push(requirements[i]['Division']);\n    }\n\n    var divs = Array.from(new Set(divisions)); //this loop goes through the dictionary passed down from Category list and extracts the \n    //name(s) of the category e.g. ['Data Science', 'Economics']\n\n    this.state = {\n      //the index in names of the current chosen category\n      selectedDivision: \"Lower Division\",\n      clicked: true,\n      selectedPlan: this.props.selectedPlan,\n      divOrSearch: \"div\"\n    };\n    this.findDivisions = this.findDivisions.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n    this.setSearch = this.setSearch.bind(this);\n    this.showDivs = this.showDivs.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedPlan: nextProps.selectedPlan\n    });\n  }\n\n  findDivisions() {\n    const requirements = this.props.data[this.props.parent]['Requirements'];\n    const divisions = [];\n\n    for (let i = 0; i < requirements.length; i++) {\n      divisions.push(requirements[i]['Division']);\n    }\n\n    return Array.from(new Set(divisions));\n  } //finds requirements in the specified division\n\n\n  findRelevantDataforDivision(division) {\n    const requirements = this.props.data[this.props.parent]['Requirements'];\n    var filtered = requirements.filter(req => req.Division === division);\n    return filtered;\n  }\n\n  handleClick(i) {\n    var divs = this.findDivisions();\n    const newDiv = divs[i];\n    this.setState({\n      selectedDivision: newDiv,\n      clicked: true\n    });\n  }\n\n  setSearch() {\n    this.setState({\n      divOrSearch: \"search\"\n    });\n  }\n\n  showDivs() {\n    this.setState({\n      divOrSearch: 'div'\n    });\n  }\n\n  render() {\n    var divisions = this.findDivisions();\n    var requirementData = this.findRelevantDataforDivision(this.state.selectedDivision);\n\n    if (this.state.divOrSearch === 'div') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        bg: \"primary\",\n        variant: \"dark\",\n        className: \"DivisionList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, divisions.map((division, index) => {\n        return React.createElement(Division, {\n          key: index,\n          name: division,\n          clicked: division === this.state.selectedDivision,\n          requirements: this.findRelevantDataforDivision(division),\n          courseData: this.props.data[this.props.parent]['Courses'],\n          onClick: () => this.handleClick(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      })), React.createElement(\"img\", {\n        onClick: () => this.setSearch(),\n        className: \"SearchIcon\",\n        src: require(\"../../Images/search.png\"),\n        height: \"20\",\n        width: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), this.state.clicked && React.createElement(\"div\", {\n        className: \"RequirementTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        className: \"RequirementList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, requirementData.map((requirement, index) => {\n        return React.createElement(Requirement, {\n          shouldUpdate: this.props.shouldUpdate,\n          onUpdate: this.props.onUpdate,\n          index: index.toString(),\n          key: requirement['Requirement'],\n          requirementTitle: requirement['Requirement'],\n          numClasses: requirement['Number of Classes'],\n          numUnits: requirement['Minimum Units'],\n          isClicked: false,\n          courseData: this.props.data[this.props.parent]['Courses'],\n          progress: this.props.progress,\n          selectedPlan: this.state.selectedPlan,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        });\n      }))));\n    } else {\n      return React.createElement(Navbar, {\n        bg: \"primary\",\n        variant: \"dark\",\n        className: \"SearchCourses\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.showDivs(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Show Divisions\"), React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"search for a course...\",\n        className: \"SearchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), allCourses.map((course, index) => {\n        return React.createElement(CourseButton, {\n          Course: course,\n          courseNumber: course['Course']['Course'],\n          courseTitle: course['Course']['Title'],\n          courseUnits: course['Course']['Units'],\n          key: course['Course']['Title'],\n          handleDrop: () => this.checkCompletedCourses(),\n          handleClick: () => this.setSelectedCourse(course),\n          isSelected: this.state.selectedCourse === course,\n          courseDescription: course['Course']['Desc'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      }));\n    }\n  }\n\n}\n\nexport default DivisionList;","map":{"version":3,"sources":["/Users/quinndarling/Desktop/beartracks/src/Components/DivisionListComponent/DivisionList.js"],"names":["React","Component","Division","Requirement","Accordion","Navbar","Nav","Form","FormControl","Button","Icon","courses","CourseButton","allCourses","DivisionList","constructor","props","requirements","data","parent","divisions","i","length","push","divs","Array","from","Set","state","selectedDivision","clicked","selectedPlan","divOrSearch","findDivisions","bind","handleClick","componentWillReceiveProps","setSearch","showDivs","nextProps","setState","findRelevantDataforDivision","division","filtered","filter","req","newDiv","render","requirementData","map","index","require","requirement","shouldUpdate","onUpdate","toString","progress","course","checkCompletedCourses","setSelectedCourse","selectedCourse"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Division from '../DivisionComponent/Division'; \nimport Requirement from '../RequirementComponent/Requirement';\nimport {Accordion, Navbar, Nav, Form, FormControl, Button} from 'react-bootstrap';\nimport {Icon} from 'semantic-ui-react'\nimport courses from '../../courses.json'\nimport CourseButton from '../CourseButtonComponent/CourseButton';\n\nconst allCourses = [courses];\n\nclass DivisionList extends Component {\n    //props are data (either user.majorData, user.collegeData etc.), clicked (boolean), onClick\n    //renders a button. If there are multiple majors/minors/colleges, renders a button to click to next, renders list of divisions if clicked\n    constructor(props) {\n        super(props);\n        const requirements = this.props.data[this.props.parent]['Requirements'];\n        const divisions = [];\n        for (let i = 0; i < requirements.length; i++) {\n            divisions.push(requirements[i]['Division'])\n        }\n        var divs = Array.from(new Set(divisions));\n        //this loop goes through the dictionary passed down from Category list and extracts the \n        //name(s) of the category e.g. ['Data Science', 'Economics']\n\n        this.state = {\n            //the index in names of the current chosen category\n            selectedDivision: \"Lower Division\",\n            clicked: true,\n            selectedPlan: this.props.selectedPlan,\n            divOrSearch: \"div\"\n        };\n        this.findDivisions = this.findDivisions.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n        this.setSearch = this.setSearch.bind(this);\n        this.showDivs = this.showDivs.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ selectedPlan: nextProps.selectedPlan });  \n      }\n\n    findDivisions() {\n        const requirements = this.props.data[this.props.parent]['Requirements'];\n        const divisions = [];\n        for (let i = 0; i < requirements.length; i++) {\n            divisions.push(requirements[i]['Division'])\n        }\n        return Array.from(new Set(divisions));\n    }\n\n    //finds requirements in the specified division\n    findRelevantDataforDivision(division) {\n\n        const requirements = this.props.data[this.props.parent]['Requirements'];\n        var filtered = requirements.filter(req => req.Division === division);\n        return filtered;\n    }\n   \n    handleClick(i) {\n        var divs = this.findDivisions();\n        const newDiv = divs[i]\n        this.setState({\n            selectedDivision: newDiv,\n            clicked: true\n        });\n    }\n\n    setSearch() {\n        this.setState({\n            divOrSearch: \"search\" \n        })\n    }\n\n    showDivs() {\n        this.setState({\n            divOrSearch: 'div'\n        })\n    }\n\n    render() {\n        var divisions = this.findDivisions();\n        var requirementData = this.findRelevantDataforDivision(this.state.selectedDivision);\n        if (this.state.divOrSearch === 'div') {\n            return (\n                <div>\n                    <Navbar bg = \"primary\" variant = 'dark' className=\"DivisionList\"\n                    >\n                        <Nav className=\"mr-auto\">\n                        {divisions.map((division, index) => {\n                            return <Division\n                            key={index}\n                            name={division}\n                            clicked={division === this.state.selectedDivision}\n                            requirements={this.findRelevantDataforDivision(division)}\n                            courseData={this.props.data[this.props.parent]['Courses']}\n                            onClick={() => this.handleClick(index)}\n                            />\n                        })}\n                        </Nav>\n                        <img onClick = {()=>this.setSearch()} className = 'SearchIcon' src={require(\"../../Images/search.png\")} height=\"20\" width=\"20\"/>\n                    </Navbar>\n                    {this.state.clicked && \n                    <div className=\"RequirementTable\">\n                        <Accordion className=\"RequirementList\">\n                            {requirementData.map((requirement, index) => {\n                                return <Requirement \n                                shouldUpdate = {this.props.shouldUpdate}\n                                onUpdate = {this.props.onUpdate}\n                                index={index.toString()}\n                                key={requirement['Requirement']}\n                                requirementTitle={requirement['Requirement']}\n                                numClasses={requirement['Number of Classes']}\n                                numUnits={requirement['Minimum Units']}\n                                isClicked={false}\n                                courseData={this.props.data[this.props.parent]['Courses']}\n                                progress={this.props.progress}\n                                selectedPlan={this.state.selectedPlan}\n                                />\n                            })}\n                        </Accordion>\n                    </div>\n                }\n                </div>\n                \n            )}\n        else {\n            return (\n                <Navbar bg = \"primary\" variant = 'dark' className=\"SearchCourses\">\n                    <button onClick = {()=>this.showDivs()}>Show Divisions</button>\n                    <Form inline>\n                        <FormControl type='text' placeholder = \"search for a course...\" className = 'SearchBar'/>\n                    </Form>\n                    {allCourses.map((course, index) => {\n                        return (\n                            <CourseButton\n                            Course={course}\n                            courseNumber={course['Course']['Course']}\n                            courseTitle={course['Course']['Title']}\n                            courseUnits={course['Course']['Units']} \n                            key = {course['Course']['Title']}\n                            handleDrop={() => this.checkCompletedCourses()}\n                            handleClick = {() => this.setSelectedCourse(course)}\n                            isSelected = {this.state.selectedCourse === course}\n                            courseDescription = {course['Course']['Desc']}/>\n                        )\n                    })}\n                </Navbar>\n            )\n        }\n    }\n}\n\nexport default DivisionList;"]},"metadata":{},"sourceType":"module"}