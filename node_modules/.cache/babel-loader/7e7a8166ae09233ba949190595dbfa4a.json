{"ast":null,"code":"var _jsxFileName = \"/Users/quinndarling/Desktop/beartracks/src/Components/DivisionListComponent/DivisionList.js\";\nimport React, { Component } from 'react';\nimport Division from '../DivisionComponent/Division';\nimport Requirement from '../RequirementComponent/Requirement';\nimport { Accordion, Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\n\nclass DivisionList extends Component {\n  //props are data (either user.majorData, user.collegeData etc.), clicked (boolean), onClick\n  //renders a button. If there are multiple majors/minors/colleges, renders a button to click to next, renders list of divisions if clicked\n  constructor(props) {\n    super(props);\n    const requirements = this.props.data[this.props.parent]['Requirements'];\n    const divisions = [];\n\n    for (let i = 0; i < requirements.length; i++) {\n      divisions.push(requirements[i]['Division']);\n    }\n\n    var divs = Array.from(new Set(divisions)); //this loop goes through the dictionary passed down from Category list and extracts the \n    //name(s) of the category e.g. ['Data Science', 'Economics']\n\n    this.state = {\n      //the index in names of the current chosen category\n      selectedDivision: \"Lower Division\",\n      clicked: true,\n      selectedPlan: this.props.selectedPlan,\n      divOrSearch: \"divisions\"\n    };\n    this.findDivisions = this.findDivisions.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n    this.setSearch = this.setSearch.bind(this);\n    this.showDivs = this.showDivs.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedPlan: nextProps.selectedPlan\n    });\n  }\n\n  findDivisions() {\n    const requirements = this.props.data[this.props.parent]['Requirements'];\n    const divisions = [];\n\n    for (let i = 0; i < requirements.length; i++) {\n      divisions.push(requirements[i]['Division']);\n    }\n\n    return Array.from(new Set(divisions));\n  } //finds requirements in the specified division\n\n\n  findRelevantDataforDivision(division) {\n    const requirements = this.props.data[this.props.parent]['Requirements'];\n    var filtered = requirements.filter(req => req.Division === division);\n    return filtered;\n  }\n\n  handleClick(i) {\n    var divs = this.findDivisions();\n    const newDiv = divs[i];\n    this.setState({\n      selectedDivision: newDiv,\n      clicked: true\n    });\n  }\n\n  setSearch() {\n    this.setState({\n      divOrSearch: \"search\"\n    });\n  }\n\n  showDivs() {\n    this.setState({\n      divOrSearch: 'div'\n    });\n  }\n\n  render() {\n    var divisions = this.findDivisions();\n    var requirementData = this.findRelevantDataforDivision(this.state.selectedDivision);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      className: \"DivisionList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, divisions.map((division, index) => {\n      return React.createElement(Division, {\n        key: index,\n        name: division,\n        clicked: division === this.state.selectedDivision,\n        requirements: this.findRelevantDataforDivision(division),\n        courseData: this.props.data[this.props.parent]['Courses'],\n        onClick: () => this.handleClick(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    })), React.createElement(\"img\", {\n      onClick: () => this.setSearch(),\n      className: \"SearchIcon\",\n      src: require(\"../../Images/search.png\"),\n      height: \"20\",\n      width: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), this.state.clicked && React.createElement(\"div\", {\n      className: \"RequirementTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      className: \"RequirementList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, requirementData.map((requirement, index) => {\n      return React.createElement(Requirement, {\n        shouldUpdate: this.props.shouldUpdate,\n        onUpdate: this.props.onUpdate,\n        index: index.toString(),\n        key: requirement['Requirement'],\n        requirementTitle: requirement['Requirement'],\n        numClasses: requirement['Number of Classes'],\n        numUnits: requirement['Minimum Units'],\n        isClicked: false,\n        courseData: this.props.data[this.props.parent]['Courses'],\n        progress: this.props.progress,\n        selectedPlan: this.state.selectedPlan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default DivisionList;","map":{"version":3,"sources":["/Users/quinndarling/Desktop/beartracks/src/Components/DivisionListComponent/DivisionList.js"],"names":["React","Component","Division","Requirement","Accordion","Navbar","Nav","Form","FormControl","Button","Icon","DivisionList","constructor","props","requirements","data","parent","divisions","i","length","push","divs","Array","from","Set","state","selectedDivision","clicked","selectedPlan","divOrSearch","findDivisions","bind","handleClick","componentWillReceiveProps","setSearch","showDivs","nextProps","setState","findRelevantDataforDivision","division","filtered","filter","req","newDiv","render","requirementData","map","index","require","requirement","shouldUpdate","onUpdate","toString","progress"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Division from '../DivisionComponent/Division'; \nimport Requirement from '../RequirementComponent/Requirement';\nimport {Accordion, Navbar, Nav, Form, FormControl, Button} from 'react-bootstrap';\nimport {Icon} from 'semantic-ui-react'\n\n\nclass DivisionList extends Component {\n    //props are data (either user.majorData, user.collegeData etc.), clicked (boolean), onClick\n    //renders a button. If there are multiple majors/minors/colleges, renders a button to click to next, renders list of divisions if clicked\n    constructor(props) {\n        super(props);\n        const requirements = this.props.data[this.props.parent]['Requirements'];\n        const divisions = [];\n        for (let i = 0; i < requirements.length; i++) {\n            divisions.push(requirements[i]['Division'])\n        }\n        var divs = Array.from(new Set(divisions));\n        //this loop goes through the dictionary passed down from Category list and extracts the \n        //name(s) of the category e.g. ['Data Science', 'Economics']\n\n        this.state = {\n            //the index in names of the current chosen category\n            selectedDivision: \"Lower Division\",\n            clicked: true,\n            selectedPlan: this.props.selectedPlan,\n            divOrSearch: \"divisions\"\n        };\n        this.findDivisions = this.findDivisions.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n        this.setSearch = this.setSearch.bind(this);\n        this.showDivs = this.showDivs.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ selectedPlan: nextProps.selectedPlan });  \n      }\n\n    findDivisions() {\n        const requirements = this.props.data[this.props.parent]['Requirements'];\n        const divisions = [];\n        for (let i = 0; i < requirements.length; i++) {\n            divisions.push(requirements[i]['Division'])\n        }\n        return Array.from(new Set(divisions));\n    }\n\n    //finds requirements in the specified division\n    findRelevantDataforDivision(division) {\n\n        const requirements = this.props.data[this.props.parent]['Requirements'];\n        var filtered = requirements.filter(req => req.Division === division);\n        return filtered;\n    }\n   \n    handleClick(i) {\n        var divs = this.findDivisions();\n        const newDiv = divs[i]\n        this.setState({\n            selectedDivision: newDiv,\n            clicked: true\n        });\n    }\n\n    setSearch() {\n        this.setState({\n            divOrSearch: \"search\" \n        })\n    }\n\n    showDivs() {\n        this.setState({\n            divOrSearch: 'div'\n        })\n    }\n\n    render() {\n        var divisions = this.findDivisions();\n        var requirementData = this.findRelevantDataforDivision(this.state.selectedDivision);\n        return (\n            <div>\n                <Navbar bg = \"primary\" variant = 'dark' className=\"DivisionList\"\n                >\n                    <Nav className=\"mr-auto\">\n                    {divisions.map((division, index) => {\n                        return <Division\n                        key={index}\n                        name={division}\n                        clicked={division === this.state.selectedDivision}\n                        requirements={this.findRelevantDataforDivision(division)}\n                        courseData={this.props.data[this.props.parent]['Courses']}\n                        onClick={() => this.handleClick(index)}\n                        />\n                    })}\n                    </Nav>\n                    <img onClick = {()=>this.setSearch()} className = 'SearchIcon' src={require(\"../../Images/search.png\")} height=\"20\" width=\"20\"/>\n                </Navbar>\n                {this.state.clicked && \n                <div className=\"RequirementTable\">\n                    <Accordion className=\"RequirementList\">\n                        {requirementData.map((requirement, index) => {\n                            return <Requirement \n                            shouldUpdate = {this.props.shouldUpdate}\n                            onUpdate = {this.props.onUpdate}\n                            index={index.toString()}\n                            key={requirement['Requirement']}\n                            requirementTitle={requirement['Requirement']}\n                            numClasses={requirement['Number of Classes']}\n                            numUnits={requirement['Minimum Units']}\n                            isClicked={false}\n                            courseData={this.props.data[this.props.parent]['Courses']}\n                            progress={this.props.progress}\n                            selectedPlan={this.state.selectedPlan}\n                            />\n                        })}\n                    </Accordion>\n                </div>\n            }\n            </div>\n            \n        )\n    }\n}\n\nexport default DivisionList;"]},"metadata":{},"sourceType":"module"}