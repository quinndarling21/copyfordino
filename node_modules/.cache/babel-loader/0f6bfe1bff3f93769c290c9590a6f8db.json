{"ast":null,"code":"var _jsxFileName = \"/Users/quinndarling/Desktop/beartracks/src/Components/CoursePlan/CoursePlan.js\";\nimport React, { Component } from 'react';\nimport { DragSource } from 'react-dnd';\nimport { Dropdown } from 'react-bootstrap';\nimport { DropdownButton } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { findDOMNode } from 'react-dom';\nconst coursePlanSource = {\n  beginDrag(props) {\n    console.log('dragging');\n    return props.Course;\n  },\n\n  endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    } else {\n      return props.handleDropOut(props.Course);\n    }\n  }\n\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nclass CoursePlan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      exists: true,\n      dropNum: 0,\n      hovering: false\n    };\n    this.toggleHoverOn = this.toggleHoverOn.bind(this);\n    this.toggleHoverOff = this.toggleHoverOff.bind(this);\n  }\n\n  toggleHoverOn() {\n    this.setState({\n      hovering: true\n    });\n  }\n\n  toggleHoverOff() {\n    this.setState({\n      hovering: false\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          isDragging = _this$props.isDragging,\n          connectDragSource = _this$props.connectDragSource,\n          Course = _this$props.Course;\n    const opacity = isDragging ? {\n      opacity: 0\n    } : {};\n    return React.createElement(Button, {\n      className: \"CoursePlanButton\",\n      ref: instance => {\n        const node = findDOMNode(instance);\n        connectDragSource(node);\n      },\n      variant: \"light\",\n      style: opacity,\n      onMouseEnter: () => this.toggleHoverOn(),\n      onMouseLeave: () => this.toggleHoverOff(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CoursePlanNumberAndButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.hovering && React.createElement(Dropdown, {\n      size: \"sm\",\n      drop: \"left\",\n      className: \"CoursePlanOptionsButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Dropdown.Menu, {\n      className: \"CoursePlanOptionsMenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      className: \"CoursePlanInfoButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Course Details\"), React.createElement(Dropdown.Item, {\n      className: \"DeleteCourseButton\",\n      onClick: () => this.props.deleteCourse(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Remove Course\"))), React.createElement(\"h1\", {\n      className: \"CoursePlanNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.number)), React.createElement(\"h2\", {\n      className: \"CoursePlanUnits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.units));\n  }\n\n}\n\nexport default DragSource(\"Course\", coursePlanSource, collect)(CoursePlan);","map":{"version":3,"sources":["/Users/quinndarling/Desktop/beartracks/src/Components/CoursePlan/CoursePlan.js"],"names":["React","Component","DragSource","Dropdown","DropdownButton","Button","findDOMNode","coursePlanSource","beginDrag","props","console","log","Course","endDrag","monitor","component","didDrop","handleDropOut","collect","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","CoursePlan","constructor","state","exists","dropNum","hovering","toggleHoverOn","bind","toggleHoverOff","setState","render","opacity","instance","node","deleteCourse","number","units"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DragSource } from 'react-dnd';\nimport {Dropdown} from 'react-bootstrap'\nimport {DropdownButton} from 'react-bootstrap'\nimport {Button} from 'react-bootstrap'\nimport { findDOMNode } from 'react-dom';\n\nconst coursePlanSource = {\n  beginDrag(props) {\n    console.log('dragging')\n    return props.Course\n  },\n\n  endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    } else {\n       return (\n        props.handleDropOut(props.Course));\n    }\n  }\n}\n\nfunction collect(connect, monitor) {\n  return {\n      connectDragSource: connect.dragSource(),\n      connectDragPreview: connect.dragPreview(),\n      isDragging: monitor.isDragging(),\n  }\n}\n  \n  class CoursePlan extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        exists: true,\n        dropNum: 0,\n        hovering: false\n      }\n\n      this.toggleHoverOn = this.toggleHoverOn.bind(this);\n      this.toggleHoverOff = this.toggleHoverOff.bind(this);\n    }\n\n    toggleHoverOn() {\n      this.setState({hovering: true})\n    }\n\n    toggleHoverOff() {\n      this.setState({hovering: false})\n    }\n\n\n    render() {\n\n        const { isDragging, connectDragSource, Course} = this.props;\n        const opacity = isDragging ? {opacity: 0} : {};\n        return (\n          <Button className = \"CoursePlanButton\" ref={instance => {\n            const node = findDOMNode(instance);\n            connectDragSource(node);\n          }} variant=\"light\" style = {opacity} onMouseEnter = {() => this.toggleHoverOn()} onMouseLeave = {() => this.toggleHoverOff()}>\n            <div className = \"CoursePlanNumberAndButton\">\n              {this.state.hovering && \n              <Dropdown size = 'sm' drop = 'left' className = \"CoursePlanOptionsButton\">\n                <Dropdown.Toggle variant = 'light'></Dropdown.Toggle>\n                <Dropdown.Menu className='CoursePlanOptionsMenu'>\n                  <Dropdown.Item className = \"CoursePlanInfoButton\">Course Details</Dropdown.Item>\n                  <Dropdown.Item className = \"DeleteCourseButton\" onClick = {()=>this.props.deleteCourse()}>Remove Course</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>}\n              <h1 className = 'CoursePlanNumber'>{this.props.number}</h1>\n            </div>\n              <h2 className = \"CoursePlanUnits\">{this.props.units}</h2>\n          </Button>\n        );\n  }\n}\n\n\nexport default DragSource(\"Course\", coursePlanSource, collect)(CoursePlan);"]},"metadata":{},"sourceType":"module"}