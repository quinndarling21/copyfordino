{"ast":null,"code":"export class NativeDragSource {\n  constructor(config) {\n    this.config = config;\n    this.item = {};\n    Object.keys(this.config.exposeProperties).forEach(property => {\n      Object.defineProperty(this.item, property, {\n        configurable: true,\n        enumerable: true,\n\n        get() {\n          // eslint-disable-next-line no-console\n          console.warn(\"Browser doesn't allow reading \\\"\".concat(property, \"\\\" until the drop event.\"));\n          return null;\n        }\n\n      });\n    });\n  }\n\n  mutateItemByReadingDataTransfer(dataTransfer) {\n    const newProperties = {};\n\n    if (dataTransfer) {\n      Object.keys(this.config.exposeProperties).forEach(property => {\n        newProperties[property] = {\n          value: this.config.exposeProperties[property](dataTransfer, this.config.matchesTypes)\n        };\n      });\n    }\n\n    Object.defineProperties(this.item, newProperties);\n  }\n\n  canDrag() {\n    return true;\n  }\n\n  beginDrag() {\n    return this.item;\n  }\n\n  isDragging(monitor, handle) {\n    return handle === monitor.getSourceId();\n  }\n\n  endDrag() {// empty\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}